@model Infrastructure.Shared.Paging.PagingMetaData
@{
    // string style = daysLeft <= 30 ? "background-color:Red" : null;
    var pages = new List<int>();
    if (Model.TotalPages <= 3 || Model.CurrentPage == 1)
    {
        pages.AddRange(Enumerable.Range(1, Math.Min(Model.TotalPages, 3)));
    }
    else if (Model.CurrentPage + 3 >= Model.TotalPages)
    {
        pages.Add(Model.TotalPages - 2);
        pages.Add(Model.TotalPages - 1);
        pages.Add(Model.TotalPages);
    }
    else
    {
        pages.Add(Model.CurrentPage - 1);
        pages.Add(Model.CurrentPage);
        pages.Add(Model.CurrentPage + 1);
    }

    var nextPageCount = Model.CurrentPage + Model.PageSize;
    if (Model.CurrentPage == Model.TotalPages)
    {
        nextPageCount = Model.TotalPages;
    }
}

<div class="flex items-center justify-between bg-white px-4 py-3 sm:px-6">
    <div class="flex flex-1 justify-between sm:hidden">
        <a href="#" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>
        <a href="#" class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>
    </div>
    <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
            <p class="text-sm text-gray-700">
                Showing
                <span class="font-medium">@Model.CurrentPage</span>
                to
                <span class="font-medium">@nextPageCount</span>
                of
                <span class="font-medium">@Model.TotalPages</span>
                results
            </p>
        </div>

        <div>
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                @if (Model.CurrentPage <= 1)
                {
                    <a href="#" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Previous</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd"/>
                        </svg>
                    </a>
                }
                else
                {
                    <span class="page-number">
                        <a href="#" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                            <input type="hidden" value="@(Model.CurrentPage - 1)"/>
                            <span class="sr-only">Previous</span>
                            <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd"/>
                            </svg>
                        </a>
                    </span>
                }

                @if (Model.CurrentPage == 1)
                {
                    <a href="#" aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                        First
                    </a>
                }
                else
                {
                    <span class="page-number">
                        <a href="#" aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                            <input type="hidden" value="1"/>
                            First
                        </a>
                    </span>
                }

                @foreach (var page in pages)
                {
                    @if (page == Model.CurrentPage)
                    {
                        <a href="#" class="relative z-10 inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                            @(page)
                        </a>
                    }
                    else
                    {
                        <span class="page-number">
                            <a href="#" class="page-number relative z-10 inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                                <input type="hidden" value="@(page)"/>
                                @(page)
                            </a>
                        </span>
                    }
                }

                @if (Model.CurrentPage == Model.TotalPages)
                {
                    <a href="#" aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                        Last
                    </a>
                }
                else
                {
                    <span class="page-number">
                        <a href="#" aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                            <input type="hidden" value="@Model.TotalPages"/>
                            Last
                        </a>
                    </span>
                }

                @if (Model.TotalPages > Model.CurrentPage)
                {
                    <span class="page-number">
                        <a href="#" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                            <input type="hidden" value="@(Model.CurrentPage + 1)"/>
                            <span class="sr-only">Next</span>
                            <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"/>
                            </svg>
                        </a>
                    </span>
                }
                else
                {
                    <a href="#" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                        <span class="sr-only">Next</span>
                        <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"/>
                        </svg>
                    </a>
                }

            </nav>
        </div>
    </div>
</div>

@Html.HiddenFor(m => m.CurrentPage)