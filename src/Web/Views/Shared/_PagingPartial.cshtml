@model Infrastructure.Shared.Paging.PagingMetaData
@{
  // string style = daysLeft <= 30 ? "background-color:Red" : null;
  var pages = new List<int>();
  if (Model.TotalPages <= 3 || Model.CurrentPage == 1)
  {
    pages.AddRange(Enumerable.Range(1, Math.Min(Model.TotalPages, 3)));
  }
  else if (Model.CurrentPage + 3 >= Model.TotalPages)
  {
    pages.Add(Model.TotalPages - 2);
    pages.Add(Model.TotalPages - 1);
    pages.Add(Model.TotalPages);
  }
  else
  {
    pages.Add(Model.CurrentPage - 1);
    pages.Add(Model.CurrentPage);
    pages.Add(Model.CurrentPage + 1);
  }
}

@if (Model.CurrentPage > 0 && Model.TotalPages > 0)
{
  <div class="flex justify-center">
    <nav class="flex" role="navigation" aria-label="Navigation">
      @if (Model.CurrentPage <= 1)
      {
        <div class="mr-2">
            <span class="sr-only">Previous</span><wbr/>
        </div>
      }
      else
      {
        <span class="mr-2 page-number">
          <a class="inline-flex items-center justify-center rounded">
            <input type="hidden" value="@(Model.CurrentPage - 1)"/>
            <span class="sr-only">Previous</span><wbr/>
          </a>
        </span>
      }

      <ul class="inline-flex text-sm font-medium">
        @if (Model.CurrentPage == 1)
        {
          <li class="ml-3 first:ml-0">
            <span class="btn">First</span>
          </li>
        }
        else
        {
          <li class="ml-3 first:ml-0 page-number">
            <a class="inline-flex items-center justify-center">
              <input type="hidden" value="1"/>
              First
            </a>
          </li>
        }

        @foreach (var page in pages)
        {
          @if (page == Model.CurrentPage)
          {
            <li>
              <span class="inline-flex items-center justify-center">@(page)</span>
            </li>
          }
          else
          {
            <li class="page-number">
              <a class="inline-flex items-center justify-center">
                <input type="hidden" value="@(page)"/>
                @(page)
              </a>
            </li>
          }
        }
        @if (Model.CurrentPage == Model.TotalPages)
        {
          <li class="ml-3 first:ml-0">
            <span class="btn">Last</span>
          </li>
        }
        else
        {
          <li class="ml-3 first:ml-0 page-number">
            <a class="inline-flex items-center justify-center">
              <input type="hidden" value="@Model.TotalPages"/>
              Last
            </a>
          </li>
        }
      </ul>
      @if (Model.TotalPages > Model.CurrentPage)
      {
        <span class="ml-2 page-number">
          <a class="inline-flex items-center justify-center">
            <input type="hidden" value="@(Model.CurrentPage + 1)"/>
            <span class="sr-only">Next</span><wbr/>
          </a>
        </span>
      }
      else
      {
        <div class="ml-2">
          <a class="inline-flex items-center justify-center">
            <span class="sr-only">Next</span><wbr/>
          </a>
        </div>
      }
    </nav>
  </div>
  @Html.HiddenFor(m => m.CurrentPage)
}
